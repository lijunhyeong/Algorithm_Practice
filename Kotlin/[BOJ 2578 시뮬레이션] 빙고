import java.io.BufferedReader
import java.io.BufferedWriter
import java.io.InputStreamReader
import java.io.OutputStreamWriter
import kotlin.collections.HashMap

fun main() {
    val br = BufferedReader(InputStreamReader(System.`in`))
    val bw = BufferedWriter(OutputStreamWriter(System.out))

    val map = Array(5) { IntArray(5) }
    val hashmap = HashMap<Int, Pair<Int, Int>>()
    for (y in 0 until 5) {
        val s = br.readLine().split(" ").map { it.toInt() }
        for (x in 0 until 5) {
            map[y][x] = s[x]
            hashmap[s[x]] = Pair(y, x)
        }
    }


    var answer = 0
    var check = false
    val cnt = mutableSetOf<String>()
    for (i in 0 until 5) {
        val s = br.readLine().split(" ").map { it.toInt() }
        for (j in 0 until 5) {
            answer += 1
            val y = hashmap[s[j]]!!.first
            val x = hashmap[s[j]]!!.second
            map[y][x] = 0

            // 대각선
            if (map[0][0] == 0 && map[1][1] == 0 && map[2][2] == 0 && map[3][3] == 0 && map[4][4] == 0) {
                cnt.add("diagonal1")
            }
            if (map[0][4] == 0 && map[1][3] == 0 && map[2][2] == 0 && map[3][1] == 0 && map[4][0] == 0) {
                cnt.add("diagonal2")
            }
            // 가로
            if (map[y][0] == 0 && map[y][1] == 0 && map[y][2] == 0 && map[y][3] == 0 && map[y][4] == 0) {
                cnt.add("y$y")
            }
            // 세로
            if (map[0][x] == 0 && map[1][x] == 0 && map[2][x] == 0 && map[3][x] == 0 && map[4][x] == 0) {
                cnt.add("x$x")
            }

            if (cnt.size >= 3) {
                bw.write("$answer")
                check = true
                break
            }
        }
        if (check) {
            break
        }
    }

    bw.flush()
    bw.close()
}
