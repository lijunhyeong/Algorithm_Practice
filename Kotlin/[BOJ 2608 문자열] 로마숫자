import java.io.BufferedReader
import java.io.BufferedWriter
import java.io.InputStreamReader
import java.io.OutputStreamWriter

fun main() {
    val br = BufferedReader(InputStreamReader(System.`in`))
    val bw = BufferedWriter(OutputStreamWriter(System.out))

    val map1 = mutableMapOf<String, Int>(
        "IV" to 4,
        "IX" to 9,
        "XL" to 40,
        "XC" to 90,
        "CD" to 400,
        "CM" to 900,
    )
    val map = mutableMapOf<String, Int>(
        "M" to 1000,
        "D" to 500,
        "C" to 100,
        "L" to 50,
        "X" to 10,
        "V" to 5,
        "I" to 1,
    )


    var n = 0
    repeat(2) {
        var s = br.readLine()
        for (i in map1) {
            if (i.key in s) {
                s = s.replace(i.key, "*")
                n += i.value
            }
        }

        for (i in s) {
            if (i != '*') {
                n += map[i.toString()]!!
            }
        }

    }

    bw.write("$n\n")

    // 이 부분 수정하면 더 효율성을 높일 수 있음.
    var s = ""
    while (n > 0) {
        if (n >= 1000) {
            s += "M"
            n -= 1000
        } else if (n >= 900) {
            s += "CM"
            n -= 900
        } else if (n >= 500) {
            s += "D"
            n -= 500
        } else if (n >= 400) {
            s += "CD"
            n -= 400
        } else if (n >= 100) {
            s += "C"
            n -= 100
        } else if (n >= 90) {
            s += "XC"
            n -= 90
        } else if (n >= 50) {
            s += "L"
            n -= 50
        } else if (n >= 40) {
            s += "XL"
            n -= 40
        } else if (n >= 10) {
            s += "X"
            n -= 10
        } else if (n >= 9) {
            s += "IX"
            n -= 9
        } else if (n >= 5) {
            s += "V"
            n -= 5
        } else if (n >= 4) {
            s += "IV"
            n -= 4
        } else if (n >= 1) {
            s += "I"
            n -= 1
        }
    }

    bw.write(s)

    bw.flush()
    bw.close()
}
