import java.io.BufferedReader
import java.io.BufferedWriter
import java.io.InputStreamReader
import java.io.OutputStreamWriter
/*
먄약 answerX부터 시작하다가 answerY가 있는 곳이면 스탑하고 없으면 -1를 출력한다.
*/
fun main() {
    val br = BufferedReader(InputStreamReader(System.`in`))
    val bw = BufferedWriter(OutputStreamWriter(System.out))

    val n = br.readLine().toInt()
    val (answerX, answerY) = br.readLine().split(" ").map { it.toInt() }
    val case = br.readLine().toInt()
    val map = Array(n + 1) { ArrayList<Int>() }
    repeat(case) {
        val (x, y) = br.readLine().split(" ").map { it.toInt() }
        map[x].add(y)
        map[y].add(x)
    }

    var answer = -1
    val visited = BooleanArray(n+1)
    val q = ArrayDeque<Pair<Int,Int>>()
    q.add(Pair(answerX,1))
    visited[answerX] = true

    while(q.isNotEmpty()){
        val (nd, cnt) = q.removeFirst()

        if (answerY in map[nd]){
            answer = cnt
            break
        }else{
            for(i in map[nd]){
                if(!visited[i]){
                    visited[i] = true
                    q.add(Pair(i, cnt+1))
                }
            }
        }
    }

    bw.write("$answer")

    bw.flush()
    bw.close()
}
