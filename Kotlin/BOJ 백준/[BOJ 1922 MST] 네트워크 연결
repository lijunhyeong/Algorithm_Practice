import java.io.BufferedReader
import java.io.BufferedWriter
import java.io.InputStreamReader
import java.io.OutputStreamWriter
import java.util.*

fun main() {
    val br = BufferedReader(InputStreamReader(System.`in`))
    val bw = BufferedWriter(OutputStreamWriter(System.out))

    val n = br.readLine().toInt()
    val line = br.readLine().toInt()

    val map = Array(n + 1) { mutableListOf<Pair<Int, Int>>() }
    repeat(line) {
        // a-b 간선의 값 c
        val (a, b, c) = br.readLine().split(" ").map { it.toInt() }
        map[a].add(Pair(b, c))
        map[b].add(Pair(a, c))
    }

    val visited = BooleanArray(n + 1)
    val priorityQueue = PriorityQueue<Pair<Int, Int>>(n + 1,
        kotlin.Comparator { a, b -> a.first - b.first })
    // 값, 위치
    priorityQueue.add(Pair(0, 1))

    var answer = 0
    while (priorityQueue.isNotEmpty()) {
        val (value, position) = priorityQueue.remove()

        if (!visited[position]) {
            visited[position] = true
            answer += value

            for (i in map[position]) {
                if (!visited[i.first]) {
                    priorityQueue.add(Pair(i.second, i.first))
                }
            }

        }
    }

    bw.write("$answer")

    bw.flush()
    bw.close()
}
