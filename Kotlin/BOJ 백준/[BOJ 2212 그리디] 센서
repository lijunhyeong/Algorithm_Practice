import java.io.BufferedReader
import java.io.BufferedWriter
import java.io.InputStreamReader
import java.io.OutputStreamWriter
/*
- 아이디어:
1. 센서 좌표를 오름차순으로 정렬한다.
2. 센서 좌표 간의 거리를 answer 배열에 넣는다.
ex) 1 6 9 3 6 7 -> 오름차순: 1 3 6 6 7 9
센서간의 간격 2 3 0 1 2
3. answer 배열을 내림차순으로 간격이 큰 것부터 정렬한다.
4. k-1 돌며 간격이 큰 것부터 0으로 없앤다.
5. answer.sum()을 출력한다.
6. ** k >= n 일 경우 각 좌표마다 센서를 심어주면 되기 때문에 집중국의 수신 가능 영역의 길이는 0이다.
 */
fun main() {
    val br = BufferedReader(InputStreamReader(System.`in`))
    val bw = BufferedWriter(OutputStreamWriter(System.out))

    val n = br.readLine().toInt()
    val k = br.readLine().toInt()
    val map = br.readLine().split(" ").map{it.toInt()}.toMutableList()


    if (k >= n){
        bw.write("0")
    }else{
        map.sort()
        val answer = IntArray(n+1)

        for(i in 0 until map.size-1){
            answer[i] = map[i+1] - map[i]
        }

        answer.sortDescending()

        for(i in 0 until k-1){
            answer[i] = 0
        }

        bw.write("${answer.sum()}")
    }


    bw.flush()
    bw.close()
    br.close()
}
