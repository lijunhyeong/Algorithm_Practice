/*
구간 합 구하기 4 11659
1. 아이디어:
dp[end]-dp[start-1]
2. 시간복잡도 O(N)
3. 자료구조 Array
 */
import java.io.BufferedReader
import java.io.BufferedWriter
import java.io.InputStreamReader
import java.io.OutputStreamWriter
import kotlin.math.max

fun main() {
    val br = BufferedReader(InputStreamReader(System.`in`))
    val bw = BufferedWriter(OutputStreamWriter(System.out))

    var (n, m) =br.readLine().split(' ').map { it.toInt() }

    val arr = br.readLine().split(' ').map { it.toInt() }

    val dp = Array(n+1){0}
    for (i in 1..arr.size){
        dp[i] =arr[i-1] +dp[i-1]
    }

    for (k in 0 until m){
        val (start, end) = br.readLine().split(' ').map { it.toInt() }

        bw.write("${dp[end]-dp[start-1]}\n")
    }

    bw.flush()
    bw.close()

}
