import java.io.BufferedReader
import java.io.BufferedWriter
import java.io.InputStreamReader
import java.io.OutputStreamWriter
fun main() {
    val br = BufferedReader(InputStreamReader(System.`in`))
    val bw = BufferedWriter(OutputStreamWriter(System.out))

    val n = br.readLine().toInt()

    val map = Array(n+1) { IntArray(n+1) }
    for (j in 0 until n) {
        val s = br.readLine().split(" ").map { it.toInt() }
        for (i in 0 until n) {
            map[j][i] = s[i]
        }
    }

    // 0번 인덱스는 0(흰색), 1번 인덱스는 1(파란색)
    val answer = IntArray(2)

    // 색 확인
    fun colorCheck(y: Int, x: Int, dist: Int): Boolean {
        for (j in y until y + dist) {
            for (i in x until x + dist) {
                if (map[y][x] != map[j][i]) return false
            }
        }
        return true
    }


    // 나누기
    fun divider(y: Int, x: Int, dist: Int) {
        // 주어진 색이 다 같은 색이거나, 크기 1 정사각형이라면
        if (colorCheck(y, x, dist) || dist == 1) {
            // 배열 0, 1에 +1
            answer[map[y][x]] += 1
        } else {
            // 1사분면
            divider(y, x+(dist/2), dist/2)
            // 2사분면
            divider(y, x, dist/2)
            // 3사분면
            divider(y+(dist/2), x, dist/2)
            // 4사분면
            divider(y+(dist/2), x+(dist/2), dist/2)
        }
    }

    divider(0, 0, n)

    // 흰색(0) 출력
    bw.write("${answer[0]}\n")
    // 파란색(1) 출력
    bw.write("${answer[1]}")

    bw.flush()
    bw.close()
}
