import java.io.BufferedReader
import java.io.BufferedWriter
import java.io.InputStreamReader
import java.io.OutputStreamWriter
import java.util.*
import kotlin.collections.ArrayList

private var n = 0
private var m = 0
// 정점 배열 생성
private lateinit var computers : Array<ArrayList<Int>>
// 방문 체크
private lateinit var checked :BooleanArray
private var cnt = 0

fun main() {
    val br = BufferedReader(InputStreamReader(System.`in`))
    val bw = BufferedWriter(OutputStreamWriter(System.out))

    n = br.readLine().toInt()
    m = br.readLine().toInt()

    computers = Array(n+1){ arrayListOf()}
    checked = BooleanArray(n+1)
    repeat(m){
        val (one, two) = br.readLine().split(' ').map { it.toInt() }
        computers[one].add(two)
        computers[two].add(one)
    } // [] [2, 5] [1, 3, 5] [2] [7] [1, 2, 6] [5] [4]

    bfs()

    bw.write("$cnt")
    bw.flush()
    bw.close()

}
private fun bfs(){
    val queue: Queue<Int> = ArrayDeque()
    queue.add(1)
    checked[1] = true
    while (queue.isNotEmpty()){
            // poll: Queue의 head에 존재하는 element를 return하고, 동시에
           val q = queue.poll()
            for (i in computers[q]){
                if (checked[i]) continue
                queue.add(i)
                checked[i] = true
                cnt+=1
            }
    }
}
