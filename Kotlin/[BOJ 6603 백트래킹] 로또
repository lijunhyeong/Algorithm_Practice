import java.io.BufferedReader
import java.io.BufferedWriter
import java.io.InputStreamReader
import java.io.OutputStreamWriter

fun main() {
    val br = BufferedReader(InputStreamReader(System.`in`))
    val bw = BufferedWriter(OutputStreamWriter(System.out))

    val answer = mutableSetOf<String>()

    fun back(arr: List<Int>, visited: BooleanArray, q: ArrayDeque<Int>, idx:Int, d: Int) {
        if (d == 6) {
            answer.add(q.sorted().joinToString(" "))
            return
        }


        for (i in idx until arr.size) {
            if (!visited[i]) {
                visited[i] = true
                q.add(arr[i])
                back(arr, visited, q, i, d + 1)
                visited[i] = false
                q.removeLast()
            }
        }
    }

    while (true) {
        val arr = br.readLine().split(" ").map { it.toInt() }
        if (arr[0] == 0) {
            break
        }

        val visited = BooleanArray(arr.size)
        val q = ArrayDeque<Int>()
        // arr는 1부터 시작
        back(arr, visited, q, 1,0)

        bw.write("${answer.joinToString("\n")}\n")
        bw.write("\n")
        answer.clear()

    }

    bw.flush()
    bw.close()
}
